// <auto-generated />
using CDN.Freelancer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDN.Freelancer.Infrastructure.Migrations
{
    [DbContext(typeof(FreelancerDbContext))]
    [Migration("20250629202429_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("CDN.Freelancer.Domain.Freelancer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Freelancers");
                });

            modelBuilder.Entity("CDN.Freelancer.Domain.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreelancerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FreelancerId");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("CDN.Freelancer.Domain.Skillset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreelancerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FreelancerId");

                    b.ToTable("Skillsets");
                });

            modelBuilder.Entity("CDN.Freelancer.Domain.Hobby", b =>
                {
                    b.HasOne("CDN.Freelancer.Domain.Freelancer", "Freelancer")
                        .WithMany("Hobbies")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Freelancer");
                });

            modelBuilder.Entity("CDN.Freelancer.Domain.Skillset", b =>
                {
                    b.HasOne("CDN.Freelancer.Domain.Freelancer", "Freelancer")
                        .WithMany("Skillsets")
                        .HasForeignKey("FreelancerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Freelancer");
                });

            modelBuilder.Entity("CDN.Freelancer.Domain.Freelancer", b =>
                {
                    b.Navigation("Hobbies");

                    b.Navigation("Skillsets");
                });
#pragma warning restore 612, 618
        }
    }
}
